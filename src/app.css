@import url("https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap");
@import url("https://fonts.googleapis.com/css2?family=Redacted+Script:wght@400&display=swap");
@import "tailwindcss";
@plugin "@tailwindcss/typography";
@theme {
  --font-sans: Inter, Roboto, Noto Sans, sans-serif, system-ui;
  --color-primary: rgb(var(--m3-scheme-primary));
  --color-on-primary: rgb(var(--m3-scheme-on-primary));
  --color-primary-container: rgb(var(--m3-scheme-primary-container));
  --color-on-primary-container: rgb(var(--m3-scheme-on-primary-container));
  --color-secondary: rgb(var(--m3-scheme-secondary));
  --color-on-secondary: rgb(var(--m3-scheme-on-secondary));
  --color-secondary-container: rgb(var(--m3-scheme-secondary-container));
  --color-on-secondary-container: rgb(var(--m3-scheme-on-secondary-container));
  --color-tertiary: rgb(var(--m3-scheme-tertiary));
  --color-on-tertiary: rgb(var(--m3-scheme-on-tertiary));
  --color-tertiary-container: rgb(var(--m3-scheme-tertiary-container));
  --color-on-tertiary-container: rgb(var(--m3-scheme-on-tertiary-container));
  --color-error: rgb(var(--m3-scheme-error));
  --color-on-error: rgb(var(--m3-scheme-on-error));
  --color-error-container: rgb(var(--m3-scheme-error-container));
  --color-on-error-container: rgb(var(--m3-scheme-on-error-container));
  --color-background: rgb(var(--m3-scheme-background));
  --color-on-background: rgb(var(--m3-scheme-on-background));
  --color-surface: rgb(var(--m3-scheme-surface));
  --color-on-surface: rgb(var(--m3-scheme-on-surface));
  --color-surface-variant: rgb(var(--m3-scheme-surface-variant));
  --color-on-surface-variant: rgb(var(--m3-scheme-on-surface-variant));
  --color-outline: rgb(var(--m3-scheme-outline));
  --color-outline-variant: rgb(var(--m3-scheme-outline-variant));
  --color-shadow: rgb(var(--m3-scheme-shadow));
  --color-scrim: rgb(var(--m3-scheme-scrim));
  --color-inverse-surface: rgb(var(--m3-scheme-inverse-surface));
  --color-inverse-on-surface: rgb(var(--m3-scheme-inverse-on-surface));
  --color-inverse-primary: rgb(var(--m3-scheme-inverse-primary));
  --color-surface-bright: rgb(var(--m3-scheme-surface-bright));
  --color-surface-container: rgb(var(--m3-scheme-surface-container));
  --color-surface-container-high: rgb(var(--m3-scheme-surface-container-high));
  --color-surface-container-highest: rgb(var(--m3-scheme-surface-container-highest));
  --color-surface-container-low: rgb(var(--m3-scheme-surface-container-low));
  --color-surface-container-lowest: rgb(var(--m3-scheme-surface-container-lowest));
  --color-surface-dim: rgb(var(--m3-scheme-surface-dim));
  --color-surface-tint: rgb(var(--m3-scheme-surface-tint));
}
:root,
::backdrop {
  color-scheme: dark;
  accent-color: rgb(var(--m3-scheme-primary));
  --m3-scheme-primary: 187 195 255;
  --m3-scheme-on-primary: 0 28 148;
  --m3-scheme-primary-container: 50 74 213;
  --m3-scheme-on-primary-container: 203 208 255;
  --m3-scheme-inverse-primary: 54 78 217;
  --m3-scheme-secondary: 187 195 255;
  --m3-scheme-on-secondary: 35 44 97;
  --m3-scheme-secondary-container: 60 69 124;
  --m3-scheme-on-secondary-container: 172 180 243;
  --m3-scheme-tertiary: 248 172 255;
  --m3-scheme-on-tertiary: 87 0 103;
  --m3-scheme-tertiary-container: 144 43 163;
  --m3-scheme-on-tertiary-container: 251 190 255;
  --m3-scheme-error: 255 180 171;
  --m3-scheme-on-error: 105 0 5;
  --m3-scheme-error-container: 147 0 10;
  --m3-scheme-on-error-container: 255 218 214;
  --m3-scheme-background: 18 19 27;
  --m3-scheme-on-background: 227 225 237;
  --m3-scheme-surface: 18 19 27;
  --m3-scheme-on-surface: 227 225 237;
  --m3-scheme-surface-variant: 68 70 84;
  --m3-scheme-on-surface-variant: 197 197 215;
  --m3-scheme-inverse-surface: 227 225 237;
  --m3-scheme-inverse-on-surface: 47 48 57;
  --m3-scheme-outline: 143 143 160;
  --m3-scheme-outline-variant: 68 70 84;
  --m3-scheme-shadow: 0 0 0;
  --m3-scheme-scrim: 0 0 0;
  --m3-scheme-surface-dim: 18 19 27;
  --m3-scheme-surface-bright: 56 56 66;
  --m3-scheme-surface-container-lowest: 13 14 21;
  --m3-scheme-surface-container-low: 26 27 35;
  --m3-scheme-surface-container: 30 31 39;
  --m3-scheme-surface-container-high: 41 41 50;
  --m3-scheme-surface-container-highest: 51 52 61;
  --m3-scheme-surface-tint: 187 195 255;
}
:root {
  accent-color: rgb(var(--m3-scheme-primary));
}
dialog {
  margin: auto;
}
button,
select,
summary {
  cursor: pointer;
}
.prose {
  /* Mapped from --tw-prose-invert-body: colors.stone[300] */
  --tw-prose-body: color-mix(
    in oklch,
    rgb(var(--m3-scheme-on-surface-variant)) 66%,
    rgb(var(--m3-scheme-on-background))
  );

  /* Mapped from --tw-prose-invert-headings: colors.white */
  /* Using on-background as per your example, often similar to on-surface in dark themes */
  --tw-prose-headings: rgb(var(--m3-scheme-on-background));

  /* Mapped from --tw-prose-invert-lead: colors.stone[400] */
  --tw-prose-lead: rgb(var(--m3-scheme-on-surface-variant));

  /* Mapped from --tw-prose-invert-links: colors.white */
  /* Using primary color for links is more conventional in M3 */
  --tw-prose-links: rgb(var(--m3-scheme-primary));

  /* Mapped from --tw-prose-invert-bold: colors.white */
  --tw-prose-bold: rgb(var(--m3-scheme-on-surface)); /* Or on-background */

  /* Mapped from --tw-prose-invert-counters: colors.stone[400] */
  --tw-prose-counters: rgb(var(--m3-scheme-on-surface-variant));

  /* Mapped from --tw-prose-invert-bullets: colors.stone[600] */
  --tw-prose-bullets: rgb(var(--m3-scheme-on-surface) / 0.5);

  /* Mapped from --tw-prose-invert-hr: colors.stone[700] */
  --tw-prose-hr: rgb(var(--m3-scheme-outline-variant));

  /* Mapped from --tw-prose-invert-quotes: colors.stone[100] */
  /* High contrast for quote text */
  --tw-prose-quotes: rgb(var(--m3-scheme-on-surface));

  /* Mapped from --tw-prose-invert-quote-borders: colors.stone[700] */
  --tw-prose-quote-borders: rgb(var(--m3-scheme-on-surface) / 0.5);

  /* Mapped from --tw-prose-invert-captions: colors.stone[400] */
  --tw-prose-captions: rgb(var(--m3-scheme-on-surface-variant));

  /* Mapped from --tw-prose-invert-kbd: colors.white */
  --tw-prose-kbd: rgb(var(--m3-scheme-on-surface));

  /* Mapped from --tw-prose-invert-kbd-shadows: hexToRgb(colors.white) */
  /* Assumes --m3-scheme-on-surface contains the raw R,G,B values (e.g., 227, 227, 231) */
  /* This is used for box-shadow color components */
  --tw-prose-kbd-shadows: var(--m3-scheme-on-surface);

  /* Mapped from --tw-prose-invert-code: colors.white */
  --tw-prose-code: rgb(var(--m3-scheme-on-surface));

  /* Mapped from --tw-prose-invert-pre-code: colors.stone[300] */
  --tw-prose-pre-code: rgb(var(--m3-scheme-on-surface)); /* Text color inside code blocks */

  /* Mapped from --tw-prose-invert-pre-bg: 'rgb(0 0 0 / 50%)' */
  /* Using a surface container color for code block background */
  --tw-prose-pre-bg: rgb(var(--m3-scheme-surface-container-lowest) / 0.5);

  /* Mapped from --tw-prose-invert-th-borders: colors.stone[600] */
  --tw-prose-th-borders: rgb(var(--m3-scheme-outline-variant));

  /* Mapped from --tw-prose-invert-td-borders: colors.stone[700] */
  --tw-prose-td-borders: rgb(var(--m3-scheme-outline-variant));
}
